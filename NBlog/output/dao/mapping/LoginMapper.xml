<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.nblog.dao.LoginMapper">

	<resultMap id="BaseResultMap" type="com.nblog.bean.Login">
		
		<id column="SystemNo" jdbcType="VARCHAR" property="systemNo" />
        <result column="Name" jdbcType="VARCHAR" property="name"/>
        <result column="LoginIP" jdbcType="VARCHAR" property="loginIp"/>
        <result column="LoginBrowser" jdbcType="VARCHAR" property="loginBrowser"/>
        <result column="OfflineTime" jdbcType="CHAR" property="offlineTime"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Login_columns">
	    
        	SystemNo,
        	Name,
        	LoginIP,
        	LoginBrowser,
        	OfflineTime
	    
	</sql>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		DELETE FROM Login
			WHERE SystemNo = #{systemNo}
	</delete>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" parameterType="com.nblog.bean.Login" useGeneratedKeys="true" keyProperty="systemNo">
    
        INSERT INTO Login (
        	SystemNo ,
        	Name ,
        	LoginIP ,
        	LoginBrowser ,
        	OfflineTime 
        ) VALUES (
			#{systemNo} ,
			#{name} ,
			#{loginIp} ,
			#{loginBrowser} ,
			#{offlineTime} 
        )
	</insert>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT <include refid="Login_columns" />
		FROM Login
		WHERE SystemNo = #{systemNo}
	</select>
	
	<select id="selectAll" resultMap="BaseResultMap">
		SELECT <include refid="Login_columns" />
		FROM Login
	</select>
	
	<select id="selectByPage" resultMap="BaseResultMap">
		SELECT <include refid="Login_columns" />
		FROM Login
	</select>
	
	<update id="updateByPrimaryKey" parameterType="com.nblog.bean.Login">
		UPDATE Login SET
	        Name = #{name} ,
	        LoginIP = #{loginIp} ,
	        LoginBrowser = #{loginBrowser} ,
	        OfflineTime = #{offlineTime} 
        WHERE SystemNo = #{systemNo}
	</update>
	 <delete id="delete"> 
        DELETE FROM Login WHERE
        <include refid="Login_where" />
    </delete>
	
	<sql id="Login_where">
		<where>	      				
              <if test="systemNo != null" >
                        AND SystemNo = #{systemNo}  
               </if>
              <if test="name != null" >
                        AND Name = #{name}  
               </if>
              <if test="loginIp != null" >
                        AND LoginIP = #{loginIp}  
               </if>
              <if test="loginBrowser != null" >
                        AND LoginBrowser = #{loginBrowser}  
               </if>
              <if test="offlineTime != null" >
                        AND OfflineTime = #{offlineTime}  
               </if>
		</where>
	</sql>
	
	
</mapper>

