/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.amc.web.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.amc.cfg.Constant;
import com.amc.domain.AmcPayable;
import com.amc.domain.AmcPayabledetail;
import com.amc.domain.AmcPurchaseaccount;
import com.amc.domain.AmcReceivable;
import com.amc.domain.AmcReceivabledetail;
import com.amc.domain.AmcSaleaccount;
import com.amc.service.PayableService;
import com.amc.util.StringUtils;

/** 
 * MyEclipse Struts
 * Creation date: 12-23-2015
 * 
 * XDoclet definition:
 * @struts.action parameter="method"
 */
public class PayableAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	private PayableService payableService;
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String pageNowString = (String) request.getParameter("pageNow");
		List<AmcPayable> payables=null;
		int pageNow,pageCount;
		if (StringUtils.isEmpty(pageNowString)) {
			int count=payableService.getPayableUndoCount();
			if(count%Constant.pageSize==0){
				pageCount = (int) Math.floor( count/ Constant.pageSize) ;
			}else{
				pageCount = (int) Math.floor( count/ Constant.pageSize) + 1;
			}
			pageNow=1;
			
			
		} else {
			pageCount=Integer.parseInt(request.getParameter("pageCount"));
			pageNow=Integer.parseInt(pageNowString);
		}
		payables=payableService.getPayablesUndoByPage(pageNow, Constant.pageSize);
		request.setAttribute("pageCount",pageCount);
		request.setAttribute("pageNow",pageNow);
		request.setAttribute("plist", payables);
		return mapping.findForward("list");
	}
	public ActionForward showDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String pid=request.getParameter("pid");
		AmcPayable payable=payableService.findPayableById(Integer.parseInt(pid));
		List<AmcPayabledetail> dList=payableService.getPayabledetails(payable);
		
		request.setAttribute("rc",payable);
		request.setAttribute("rcd",dList);
		return mapping.findForward("showDetail");
	}
	public ActionForward updateState(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String pid=request.getParameter("pid");
		AmcPayable payable=payableService.findPayableById(Integer.parseInt(pid));
	
		payable.setPaystate(0);//已付款
		//将账款转入业务账中
		payableService.transPayableToAccount(payable);
		
		return list(mapping, form, request, response);
	}
	public ActionForward listaccount(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String pageNowString = (String) request.getParameter("pageNow");
		List<AmcPurchaseaccount> accounts=null;
		int pageNow,pageCount;
		if (StringUtils.isEmpty(pageNowString)) {
			int count=payableService.getAccountCount();
			if(count%Constant.pageSize==0){
				pageCount = (int) Math.floor( count/ Constant.pageSize) ;
			}else{
				pageCount = (int) Math.floor( count/ Constant.pageSize) + 1;
			}
			pageNow=1;
			
			
		} else {
			pageCount=Integer.parseInt(request.getParameter("pageCount"));
			pageNow=Integer.parseInt(pageNowString);
		}
		accounts=payableService.getAccountByPage(pageNow, Constant.pageSize);
		request.setAttribute("pageCount",pageCount);
		request.setAttribute("pageNow",pageNow);
		request.setAttribute("accounts", accounts);
		return mapping.findForward("listaccount");
	}
	public ActionForward showAccountDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String pid=request.getParameter("pid");
		AmcPurchaseaccount account=payableService.getPurchaseaccountByAccountId(Integer.parseInt(pid));
		List<AmcPayabledetail> dList=payableService.getPayabledetailsByAccount(account);
		
		request.setAttribute("rc",account);
		request.setAttribute("rcd",dList);
		return mapping.findForward("showAccountDetail");
	}
	public PayableService getPayableService() {
		return payableService;
	}
	public void setPayableService(PayableService payableService) {
		this.payableService = payableService;
	}
	
}